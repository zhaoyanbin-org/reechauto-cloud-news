server.port= 7766
logging.level.root=INFO

eureka.client.service-url.defaultZone=http://reechadmin:reechadmin@localhost:8888/eureka/
eureka.instance.prefer-ip-address=true
eureka.instance.instance-id=${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}




#开启健康检查(需要spring-boot-starter-actuator依赖)
eureka.client.healthcheck.enabled=true
#租期到期时间，默认90秒
eureka.instance.lease-expiration-duration-in-seconds=30
#租赁更新时间间隔，默认30，即30秒发送一次心跳
eureka.instance.lease-renewal-interval-in-seconds=10



##这里的重试并不是报错以后的重试，而是负载均衡客户端发现远程请求实例不可到达后，去重试其他实例
#启动负载均衡的重试机制，默认false
#重试机制pom.xml必须有spring-retry，同时spring.cloud.loadbalancer.retry.enabled=true
spring.cloud.loadbalancer.retry.enabled=true
#Hystrix是否启用超时时间
hystrix.command.default.execution.timeout.enabled=true
#Hystrix断路器的超时时间，默认是1s，断路器的超时时间需要大于ribbon的超时时间，不然不会触发重试。
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=10000
#ribbon
ribbon.eureka.enabled=true
#ribbon请求连接的超时时间
ribbon.ConnectTimeout=3000
#请求处理的超时时间
ribbon.ReadTimeout=5000
#对所有请求操作都进行重试(建议false，否则可能出现重复操作)
ribbon.OkToRetryOnAllOperations=false
#对当前服务的重试次数
ribbon.MaxAutoRetries=0
#切换服务的次数
ribbon.MaxAutoRetriesNextServer=1



###########zuul代理##################
#重试开关
zuul.retryable=true

zuul.routes.news.path=/news/**
zuul.routes.news.custom-sensitive-headers=true
zuul.routes.news.sensitive-headers=
zuul.routes.news.service-id=server-news
zuul.routes.news.retryable=true


security.oauth2.uri=http://127.0.0.1:9966/authorization
security.oauth2.client.client-id=usercenter
security.oauth2.client.client-secret=usercenter123456
security.oauth2.resource.user-info-uri=http://127.0.0.1:9966/authorization/user
security.oauth2.resource.token-info-uri=http://127.0.0.1:9966/authorization/oauth/check_token
security.oauth2.resource.prefer-token-info=true


#cache
spring.cache.type=redis
#缓存数据key是否使用前缀，默认是true
spring.cache.redis.use-key-prefix=true
spring.cache.redis.key-prefix=cache-reechauto-news
spring.cache.redis.cache-null-values=false
spring.cache.redis.time-to-live=6000
spring.cache.redis.database=8
#

spring.redis.database=0 
spring.redis.host=39.104.98.80
spring.redis.port=7698
spring.redis.password=reech@lvchiauto
spring.redis.timeout=6000
spring.redis.lettuce.pool.max-active=8
spring.redis.lettuce.pool.max-wait=-1
spring.redis.lettuce.pool.max-idle=8
spring.redis.lettuce.pool.min-idle=0 
